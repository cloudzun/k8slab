*创建群集

node 1操作步骤
hostnamectl set-hostname node1

nano /etc/hosts

192.168.0.34 node1
192.168.0.203 node2 nfs
192.168.0.10 node3

kubeadm config print init-defaults  > kubeadm-config.yaml

nano kubeadm-config.yaml

apiVersion: kubeadm.k8s.io/v1beta2
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789abcdef
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.0.180 # 替换为节点1地址
  bindPort: 6443
nodeRegistration:
  criSocket: /var/run/dockershim.sock
  name: cka-master
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
---
apiServer:
  timeoutForControlPlane: 4m0s
apiVersion: kubeadm.k8s.io/v1beta2
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controllerManager: {}
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers # 替换为aliyun源
kind: ClusterConfiguration
kubernetesVersion: v1.18.13
networking:
  dnsDomain: cluster.local
  serviceSubnet: 10.96.0.0/12
  podSubnet: 10.244.0.0/16 # 增加podSubnet
scheduler: {}

安装k8s群集
kubeadm init --config kubeadm-config.yaml

记录kubeadmin join


kubeadm join 192.168.0.242:6443 --token abcdef.0123456789abcdef \
    --discovery-token-ca-cert-hash sha256:041e97b7e2afd7c8411e809fcd140744036f844b1febee2df1a5fe5c55cfae70


配置访问群集
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -u) $HOME/.kube/config
 
部署网络插件
curl https://docs.projectcalico.org/manifests/calico.yaml -O
kubectl apply -f calico.yaml

设置自启动
systemctl enable kubelet

安装NFS客户端
apt install -y nfs-kernel-server

node 2操作步骤
hostnamectl set-hostname node2

nano /etc/hosts

192.168.0.34 node1
192.168.0.203 node2 nfs
192.168.0.10 node3

加入群集
kubeadm join 

安装NFS Server
apt install -y nfs-kernel-server

创建共享目录,设置共享权限
mkdir /data
chmod 777 -R /data
mkdir /data/mysql
mkdir /data/elasticsearch
chmod 777 -R /data/elasticsearch

修改配置文件
nano /etc/exports

/data *(rw,no_root_squash)

重启服务（如果节点重启之后，共享丢失，请重做此步）
systemctl restart nfs-server

设置开机自启
systemctl enable nfs-server
systemctl enable kubelet

node 3操作步骤
hostnamectl set-hostname node3

nano /etc/hosts

192.168.0.34 node1
192.168.0.203 node2 nfs
192.168.0.10 node3

kubeadm join 

设置自启动
systemctl enable kubelet

安装NFS客户端
apt install -y nfs-kernel-server

退回到node1，加载实验目录
git clone https://github.com/cloudzun/k8slab
cd k8slab

*启用ingress

使用 ver 3.0创建yaml
kubectl apply -f https://raw.githubusercontent.com/cloudzun/k8slab/main/svc/ingress-nginx.yaml

cd svc

kubectl apply -f ingress-nginx.yaml


查看ingress-nginx的pod
kubectl get pods -n ingress-nginx -o wide
  *关注ingress-nginx-controller所在节点


*安装NFS CSI

进入csi文件夹
kubectl apply -f ./

查看csi对应pod
kubectl get pod -n kube-system -o wide | grep csi
  *等待csi-nfs相关pod就绪之后再进行后续步骤

切换storage到修改StorageClass定义文件 （需要替换NFS服务器ip地址）

nano nfs-sc.yaml
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-csi
provisioner: nfs.csi.k8s.io
parameters:
  server: 192.168.0.123 # 指定nfs服务器地址
  share: /data
reclaimPolicy: Retain  # only retain is supported
volumeBindingMode: Immediate
mountOptions:
  - hard
  - nfsvers=4.1

创建SC 
kubectl apply -f nfs-sc.yaml

 
查看sc 
kubectl get sc -o wide


*安装metrics-server

切换到perfmon目录执行metrics-server的文件

安装metrics-server
kubectl apply -f metrics-server.yaml

查看pod
kubectl get pod -n kube-system | grep metrics-server


*启用HPA

修改kube-controller-manager.yaml，增加启动参数
nano /etc/kubernetes/manifests/kube-controller-manager.yaml 

    - --horizontal-pod-autoscaler-use-rest-clients=true
    - --horizontal-pod-autoscaler-downscale-delay=5m0s
    - --horizontal-pod-autoscaler-upscale-delay=20s
    - --horizontal-pod-autoscaler-sync-period=10s

修改好之后，观察kube-controller-manager的自动重启
kubectl get pod -n kube-system | grep kube-controller-manager


*安装helm



wget https://chengzhstor.blob.core.windows.net/k8slab/helm-v3.3.0-linux-amd64.tar.gz
tar xf helm-v3.3.0-linux-amd64.tar.gz
mv linux-amd64/helm /usr/bin/

查看helm版本
helm version


*安装istio 

安装istio 1.5.2


wget https://chengzhstor.blob.core.windows.net/k8slab/istio-1.5.2-linux.tar.gz
tar xf istio-1.5.2-linux.tar.gz
cd istio-1.5.2/
export PATH="$PATH:/root/istio-1.5.2/bin"
istioctl manifest generate --set profile=demo --set values.global.jwtPolicy=first-party-jwt > ./deploy.yaml
istioctl manifest apply --set profile=demo

查看 istio 相关pod：
kubectl get pods -n istio-system

查看 crd：
kubectl get crd | grep istio

查看api资源
kubectl api-resources | grep istio

查看 istio 服务状态：
kubectl get svc -n istio-system 

将kiali jaeger和grafana的nordport端口暴露出来
kubectl patch svc -n istio-system prometheus -p '{"spec":{"type": "NodePort"}}'
kubectl patch service prometheus --namespace=istio-system --type='json' --patch='[{"op": "replace", "path": "/spec/ports/0/nodePort", "value":31120}]'
kubectl patch svc -n istio-system grafana  -p '{"spec":{"type": "NodePort"}}'
kubectl patch service grafana --namespace=istio-system --type='json' --patch='[{"op": "replace", "path": "/spec/ports/0/nodePort", "value":31124}]'
kubectl patch svc -n istio-system jaeger-query -p '{"spec":{"type": "NodePort"}}'
kubectl patch service jaeger-query --namespace=istio-system --type='json' --patch='[{"op": "replace", "path": "/spec/ports/0/nodePort", "value":31122}]'
kubectl patch svc -n istio-system kiali -p '{"spec":{"type": "NodePort"}}'
kubectl patch service kiali --namespace=istio-system --type='json' --patch='[{"op": "replace", "path": "/spec/ports/0/nodePort", "value":31123}]'



备注：
*删除master污点，使其能承载工作负载
kubectl taint node k8s01 node-role.kubernetes.io/master-

*如果在本地运行，需要参照以下步骤对虚机进行配置

设置计算机名
hostnamectl set-hostname node1


关闭swap（如果采用讲师标准映像则不需要这一步）
sudo swapoff -a

sudo rm /swap.img

nano /etc/fstab 
#注释最后一行


设置固定IP地址

安装nmcli
apt install network-manager -y 

修改配置文件
nano /etc/netplan/00-installer-config.yaml

network:
  version: 2
  ethernets:
    eth0:   # 配置的网卡的名称
      addresses: [192.168.1.201/24]   # 配置的静态ip地址和掩码
      dhcp4: no    # 关闭dhcp4
      optional: true
      gateway4: 192.168.1.1 # 网关地址
      nameservers:
        addresses: [192.168.1.1]  # DNS服务器地址，多个DNS服务器地址需要用英文逗号分隔开，可不配置
  
使配置生效
netplan apply


